<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Are You Sure to Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ...
            </div>
            @if (IsParentComponentProcessing)
            {
                <div class="modal-footer">
                    <button type="button" disabled class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal">
                        Processing...
                    </button>
                </div>
            }
            else
            {

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="()=>OnConfirmationDelete(false)">Close</button>
                    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal"
                        @onclick="()=>OnConfirmationDelete(true)">
                        Delete
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@code {

    [Parameter]
    public EventCallback<bool> ConfirmationChange { get; set; }
    [Parameter]
    public bool IsParentComponentProcessing { get; set; }

    private async Task OnConfirmationDelete(bool value)
    {
        if (value)
        {
            await ConfirmationChange.InvokeAsync(value);
        }
    }
}
